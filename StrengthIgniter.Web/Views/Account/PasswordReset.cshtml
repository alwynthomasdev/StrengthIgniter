@model PasswordResetViewModel
@inject IOptions<RegistrationServiceConfig> optRegistrationServiceConfig
@{
    RegistrationServiceConfig registrationConfig = optRegistrationServiceConfig.Value;
    Layout = "~/Views/Shared/_ExtLayout.cshtml";
    ViewBag.Title = "Password Reset";
}

    <form asp-action="passwordreset" method="post">
        <input asp-for="PasswordResetToken" type="hidden" />
        <input asp-for="SecurityQuestionAnswerReference" type="hidden" />

        <div class="form-group">
            <label asp-for="Password"></label>
            <input asp-for="Password" type="password" minLength="@registrationConfig.PasswordMinLength" maxlength="@registrationConfig.PasswordMaxLength" class="form-control" placeholder="Your Password">
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ConfirmPassword"></label>
            <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm Your Password">
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="SecurityAnswer">@Model.SecurityQuestion</label>
            <input asp-for="SecurityAnswer" type="text" class="form-control" placeholder="">
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary btn-lg w-100">Reset Password</button>
        </div>
        @if (Model != null && Model.PasswordResetAttemptFailed)
        {
            <div class="form-group">
                <p class="alert alert-danger">Reset attempt failed.</p>
            </div>
        }
    </form>
