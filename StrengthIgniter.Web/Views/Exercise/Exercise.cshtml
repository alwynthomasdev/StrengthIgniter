@model ExerciseModel
@{
    ViewData["Title"] = Model.Name;
    Guid sectionId = Guid.NewGuid();
}
@section Styles{
    <link rel="stylesheet" href="~/css/bootstrap-datepicker3.min.css" />
}
<section id="@sectionId">
    <div class="row">
        <div class="col">
            <h2>@Model.Name</h2>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col">
            <canvas id="max-chart"></canvas>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col">
            <h3>Records</h3>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <table class="table table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>Date</th>
                        <th>Sets</th>
                        <th>Reps</th>
                        <th>Weight</th>
                        <th>Bodyweight</th>
                        <th>RPE</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
                <tfoot><tr><td colspan="7" class="pagination-container"></td></tr></tfoot>
            </table>
        </div>
    </div>
    <hr />
    <div class="row">
        <div id="record-form-container" class="col">
            @*<partial name="~/Views/Record/_RecordEditor.cshtml" model="new RecordViewModel { ExerciseReference = Model.Reference }" />*@
        </div>
    </div>
</section>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/bootstrap-datepicker.min.js"></script>
    <script src="~/js/bootstrap-input-spinner.js"></script>
    <script>

    (function ($) {
        'use strict';

        var $sectionContainer = $('#@sectionId');

        var recordPaginator = new Paginator({
            table: $sectionContainer.find('table'),
            url: '/exercise/pagedexerciserecords',
            filters: { reference: '@Model.Reference' },
            pageLength: 10,
            rowGenerator: function (record) {
                var $row = $('<tr data-id="' + record.recordId + '"></tr>')
                    .append('<td>' + moment(record.date).format('MMM Do YYYY') + '</td>')
                    .append('<td>' + (record.sets === null ? '1' : record.sets) + '</td>')
                    .append('<td>' + record.reps + '</td>')
                    .append('<td>' + record.weightKg + '</td>')
                    .append('<td>' + (record.bodyweightKg !== null ? record.bodyweightKg + 'kg' : '') + '</td>')
                    .append('<td>' + (record.rpe === null ? '' : record.rpe) + '</td>')
                    .append('<td class="text-right">' +
                        '<a href="#" class="btn btn-sm btn-info btn-edit-record"><i class="fa fa-wrench"></i></a> ' +
                        '<a href="#" class="btn btn-sm btn-danger btn-delete-record"><i class="fa fa-trash"></i></a>' +
                    '</td>');

                $row.on('click', '.btn-edit-record', function (e) {
                    e.preventDefault();
                    var $this = $(this);
                    var recId = $this.parents('tr').data('id');
                    buildRecordEditor(recId);
                });

                $row.on('click', '.btn-delete-record', function (e) {
                    e.preventDefault();
                    var $this = $(this);
                    alertify.confirm("Are you sure you want to delete this record?",
                        function () {
                            
                            var recId = $this.parents('tr').data('id');
                            $.ajax({
                                url: '/record/delete',
                                method: 'DELETE',
                                data: { id: recId }
                            })
                                .done(function (resp) {
                                    alertify.success('Record deleted.');
                                    refreshPage();
                                })
                                .fail(function (err) {
                                    console.log(err);
                                    alertify.error('Sorry, something went wrong when deleting your record.');
                                });
                        });

                });

                return $row;
            },
            showLoadingMessage: function () {
                return '<tr><td colspan="6" style="text-align:center;">Loading</td></tr>';
            }
        });

        var refreshPage = function () {
            //refresh chart
            clearCanvas('max-chart');
            RenderMaxChart('@Model.Reference', 'max-chart');
            //referesh records
            recordPaginator.sendRequest({ reference: '@Model.Reference' }, true);
        }

        var buildRecordEditor = function (id = null) {
            var $recordFormContainer = $sectionContainer.find('#record-form-container');
            configureRecordEditor($recordFormContainer, refreshPage, '@Model.Reference', id);
        }

        var init = function () {
            RenderMaxChart('@Model.Reference', 'max-chart');
            buildRecordEditor();
        }

        init();
    })(jQuery);

    </script>
}